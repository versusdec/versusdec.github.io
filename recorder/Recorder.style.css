:root {
    --color_bg: #15203D;
    --color_primary: #26aceb;
    --color_secondary: #A09DC0   ;
    --color_error: #FA006C;
    --color_font: rgba(255, 255, 255, 0.1);
    --border-radius: 7px;
}

.player a {
    cursor: pointer;
}

.player a[disabled], .player a[disabled]:hover {
    fill: var(--color_secondary);
    cursor: default;
}

rect.rect {
    fill: var(--color_secondary);
}

@-webkit-keyframes shimmer {
    0% {
        background-position: -50px 0;
    }
    100% {
        background-position: calc(100% + 50px) 0;
    }
}

@keyframes shimmer {
    0% {
        background-position: -50px 0;
    }
    100% {
        background-position: calc(100% + 50px) 0;
    }
}

.player .loading {
    cursor: default;
    position: absolute;
    right: 50%;
    top: 2px;
    -webkit-transform: translate(60%, 0);
    -ms-transform: translate(60%, 0);
    transform: translate(60%, 0);
    font-size: 11px;
    text-align: center;
    color: var(--color_font);
    background: -webkit-gradient(linear, left top, right top, from(rgba(255, 255, 255, 0.1)), color-stop(var(--color_primary)), to(rgba(255, 255, 255, 0.1)));
    background: -o-linear-gradient(left, rgba(255, 255, 255, 0.1), var(--color_primary), rgba(255, 255, 255, 0.1));
    background: linear-gradient(90deg, rgba(255, 255, 255, 0.1), var(--color_primary), rgba(255, 255, 255, 0.1));
    background-size: 50px 100%;
    -moz-background-clip: text;
    -webkit-background-clip: text;
    -webkit-animation-name: shimmer;
    animation-name: shimmer;
    -webkit-animation-duration: 3s;
    animation-duration: 3s;
    -webkit-animation-iteration-count: infinite;
    animation-iteration-count: infinite;
    background-repeat: no-repeat;
    background-position: 0 0;
    background-color: var(--color_bg);
}

.player {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-flow: row;
    flex-flow: row;
    position: relative;
    max-width: 290px;
    padding-right: 30px;
    padding-left: 2px;
    border-radius: var(--border-radius);
}

.player button {
    border-radius: var(--border-radius);
    background-color: var(--color_primary);
    color: #fff;
    min-height: 32px;
    border: none;
    cursor: pointer;
    -webkit-transition: all 0.2s;
    -o-transition: all 0.2s;
    transition: all 0.2s;
    display: inline-flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    outline: none;
    background: var(--color__border);
    padding: 0 4px;
    font-size: 24px;
    margin-right: 5px;
    height: 32px;
    width: 32px;
    flex-shrink: 0;
    position: relative;
}

.player button[disabled] {
    background-color: var(--color_secondary);
    cursor: not-allowed;
    border: none;
    color: #fff;
}

.player button:hover {
    opacity: 0.8;
}

.player button::before, .player button::after {
    content: '';
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.player button.play {
    background: var(--color_primary);
}

.player button.play::before {
    border-top: 8px solid transparent;
    border-left: 14px solid white;
    border-bottom: 8px solid transparent;
    transform: translate(-40%, -50%);
}

.player button.pause {
    background: #fff;
    -webkit-box-shadow: 0 0 3px var(--color_primary);
    box-shadow: 0 0 3px var(--color_primary);
}

.player button.pause::before, .player button.pause::after {
    height: 12px;
    width: 2px;
    background-color: var(--color_primary);
}

.player button.pause::before {
    left: 40%;
}

.player button.pause::after {
    left: 60%;
}

.player button.stop {
    background: var(--color_secondary);
}

.player button.stop::before {
    width: 12px;
    height: 12px;
    background-color: #fff;
}

.player button.record {
    background: var(--color_error);
}

.player button.record::before {
    width: 15px;
    height: 15px;
    background-color: #fff;
    border-radius: 50%;
}

.player.recording button.record::before {
    background-color: var(--color_error);
}

.player progress {
    position: absolute;
    bottom: 5px;
    left: 76px;
    width: 150px;
    height: 3px;
    cursor: pointer;
    -webkit-appearance: none;
    appearance: none;
}

.player progress::-webkit-progress-bar {
    background: var(--color_secondary);
}

.player progress::-webkit-progress-value {
    background: var(--color_primary);
}

.player progress:hover::-webkit-progress-value {
    box-shadow: 0 0 3px var(--color_primary);
}

.player .timer, .player .record_time {
    font-size: 10px;
    position: absolute;
    bottom: -2px;
    right: 0;
}

.player .timeline {
    cursor: pointer;
}

.player .timeline:hover .ps, .player .timeline:hover .ps.s {
    fill: var(--color_primary)
}

.player .timeline .s {
    fill: var(--color_primary)
}

.player .timeline:hover .s {
    fill: var(--color_secondary)
}

.player .timeline rect:hover {
    opacity: 0.5;
}

.player .download, .player .close {
    position: absolute;
    top: 0;
    right: -2px;
    fill: var(--color_primary)
}

.player .download:hover, .player .close:hover {
    fill: var(--color_error)
}

.player .download {
    right: 12px;
}

.player .download::before, .player .close::before {
    margin-right: 0;
}

.player.recording button.record {
    background: #fff;
    color: var(--color_error);
    -webkit-box-shadow: 0 0 3px var(--color_primary);
    box-shadow: 0 0 3px var(--color_primary);
}

.player.error {
    background: linear-gradient(
            90deg, rgba(0, 0, 0, 0) 20%, var(--color_error));
}

.player .hide {
    display: none;
}

@media screen and (max-width: 768px) {
    .player {
        width: 155px;
    }

    .player button {
        height: 20px;
        width: 20px;
        min-height: auto;
        border-radius: 3px;
    }

    .player .timeline {
        display: none;
    }

    .player progress {
        bottom: -7px;
        left: 2px;
        width: 150px !important;
        height: 3px;
    }

    .player .timer, .player .record_time {
        bottom: -1px;
        right: auto;
        left: 55px;
        width: 100%;
    }

    .player .record_time {
        left: 68px;
    }

    .player button.play::before {
        border-top: 4px solid transparent;
        border-left: 7px solid white;
        border-bottom: 4px solid transparent;
    }

    .player button.record::before {
        width: 7px;
        height: 7px;
    }

    .player button.stop::before {
        width: 8px;
        height: 8px;
    }

    .player button.pause::before, .player button.pause::after {
        height: 8px;
    }

    .player .loading {
        top: -2px;
    }
}